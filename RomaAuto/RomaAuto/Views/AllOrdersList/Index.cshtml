@using PagedList.Mvc;
@model PagedList.IPagedList<RomaAuto.Models.Order>
<link href="~/Content/PagedList.css" rel="stylesheet" />
<link href="~/Style/TableStyle.css" rel="stylesheet" />
<h2>ყველა შეკვეთა</h2>
@{
    string noInfo = "---------";
}
<style>
    .closed {
        background-color: lightgreen !important;
    }
</style>
<form method="get" action="/AllOrdersList/Excel" id="excel">
</form>
<a href="javascript:document.getElementById('excel').submit()">Excel</a>
<div class="">
    <form method="get" action="/AllOrdersList/Index" >
        <input type="hidden" name="page" value="@ViewBag.Page" />
        <input type="hidden" name="page" value="@ViewBag.Page" />
        <input name="operatorLastname" type="text" value="@ViewBag.OperatorLastname" class="form-control" placeholder="ოპერატორი" style="float:left">
        <input name="sellerLastname" type="text" value="@ViewBag.SellerLastname" class="form-control" placeholder="მომწოდებელი" style="float:left">
        <input name="openDate" type="text" value="@ViewBag.OpenDate" class="form-control" placeholder="შეკვეთის მიღება" style="float:left" />
        <input name="closeDate" type="text" value="@ViewBag.CloseDate" class="form-control" placeholder="შეკვეთის დახურვა" style="float:left">
        <input type="submit" value="ძებნა" class="btn" style="float:left" />
    </form>
</div>
<br />
<br />
<br />


@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
<table>
    <tr>
        <th>მწარმოებელი</th>
        <th>მოდელი</th>
        <th>კუბატურა</th>
        <th>კატეგორია</th>
        <th>წელი</th>
        <th>ტრანსმისია</th>
        <th>მდებარეობა</th>
        <th>საკონტაქტო ნომერი</th>
        <th>ნაწილი</th>
        <th>შენიშვნა</th>
        <th>მომწოდებლები</th>
        <th>შეკვეთა მიიღო</th>
        <th>შეკვეთა დახურა</th>
        <th>შეკვეთის თარიღი</th>
        <th>დახურვის თარიღი</th>
    </tr>
    @foreach (var order in Model)
    {
        var isClosedColor = order.IsClosed ? "closed" : "";
        <tr class="@isClosedColor">
            <td>
                @{
                    string manufacturer = order.ManufacturerID == null ? noInfo : order.Manufacturer.Name;
                }
                @manufacturer
            </td>
            <td>
                @{
                    string carModel = order.CarModelID == null ? noInfo : order.CarModel.Name;
                }
                @carModel
            </td>
            <td>@order.Kubatura</td>
            <td>
                @{
                    string category = order.CarCategoryID == null ? noInfo : order.CarCategory.Name;
                }
                @category
            </td>
            <td>@order.OutputDate</td>
            <td>
                @{
                    string transmision = order.TransmisionID == null ? noInfo : order.Transmision.Name;
                }
                @category
            </td>
            <td>
                @{
                    string city = order.CityID == null ? noInfo : order.City.Name;
                }
                @city
            </td>
            <td>@order.Phone</td>
            <td>@order.Part</td>
            <td>@order.Note</td>

            <td>
                @{
                    var sellers = "";
                    foreach (var item in order.Seller_Order)
                    {
                        sellers += item.Saler.Lastname + "\n";
                    }
                }
                @sellers
            </td>
            <td>
                @{
                    string creator = order.Operator == null ? noInfo : order.Operator.Name;
                    creator += order.Operator == null ? "" : (" " + order.Operator.Lastname);
                }
                @creator
            </td>
            <td>
                @{
                    string closer = order.Operator1 == null ? noInfo : order.Operator1.Name;
                    closer += order.Operator1 == null ? "" : (" " +order.Operator1.Lastname);
                }
                @closer
            </td>
            <td>
                @order.OpenDate.ToShortDateString()
            </td>
            <td>
                @{
                    var closeDate = order.CloseDate == null ? "" : order.CloseDate.Value.ToShortDateString();
                }
                @closeDate
            </td>
        </tr>
                    }
</table>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))